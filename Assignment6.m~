% Data Inference and Applied Machine Learning
% Assignment6
% Name: Mubarak Mikail
% Andrew ID: mmikail

%% Q2
titanic = readtable('titanic3.csv');
name = titanic.name;
class = titanic.pclass;
sex = titanic.sex;
age = titanic.age;
survived = titanic.survived;

class_c = categorical(class);
sex_c = categorical(sex);
survived_c = categorical(survived);
%age_c = categorical(age);

x = table(class_c, sex_c, age);
ctree = ClassificationTree.fit(x, survived_c);
view(ctree,'mode','graph');

resuberror = resubLoss(ctree);
cvctree = crossval(ctree);
cvloss = kfoldLoss(cvctree);

[~,~,~,bestlevel] = cvLoss(ctree,'subtrees','all','treesize','min')

% Prune the tree to use it for other purposes:
pctree = prune(ctree,'Level',6);
view(pctree,'mode','graph');
presuberror = resubLoss(pctree);
pcvctree = crossval(pctree);
pcvloss = kfoldLoss(pcvctree);

X = table(class_c, sex_c, age, survived_c);
sz = size(X ,1);
cv = cvpartition(sz, 'HoldOut', 0.3);
testIDX = cv.test;
test = X(testIDX, :);
train = X(~testIDX, :);
trainX = train(: , 1:3);
trainY = train(:,4);
testX = test(: , 1:3);
testY = test(:,4);

logMDl = fitglm(train, 'Distribution', 'Binomial')
yhat = round(predict(logMDl, testX));
conf_mat = confusionmat(table2array(testY), categorical(yhat));
TP = conf_mat(1,1);
FP = conf_mat(1,2);
FN = conf_mat(2,1);
TN = conf_mat(2,2);
accuracy = (TP + TN) / (TP + FN + FP + TN)

